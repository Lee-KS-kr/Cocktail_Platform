<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.cocktail.cocktail_platform.dao.MemberDAO">
	<!-- 통합 회원정보 저장 -->
	<insert id="insertMember" parameterType="Member">
		insert into
			member 
				(
				memberId
				, memberPw
				, memberName
				, phone
				, birthday
				, email
				, memberType
				, gender
				)
		values 
				(
				#{memberId}
				, #{memberPw}
				, #{memberName}
				, #{phone}
				, #{birthday}
				, #{email}
				, #{memberType}
				, #{gender}
				)
	</insert>
	
	<!-- 취향 정보 저장 -->
	<insert id="insertTaste" parameterType="Taste">
		insert into 
			taste 
				(tasteCode
				, memberId
				, hasAllergy
				, <if test="allergyType != null">allergyType
				, </if>
				cocktailTaste
				, cocktailFlavor
				)
		values (
				taste_seq.nextval
				, #{memberId}
				, #{hasAllergy}
				, <if test="allergyType != null">#{allergyType}
				, </if>
				#{cocktailTaste}
				, #{cocktailFlavor}
				)
	</insert>
	
	<!-- Id로 회원 정보 찾기 -->
	<select id="findMemberById" parameterType="String" resultType="Member">
		select
			*
		from
			member
		where
			memberId = #{memberId}
	</select>
	
	
	<!-- Email로 회원 정보 찾기 -->
	<select id="findMemberByEmail" parameterType="String" resultType="Member">
		select
			*
		from
			member
		where
			email = #{email}
	</select>
	
	<!-- Id로 취향 정보 찾기 -->
	<select id="findTasteById" parameterType="String" resultType="Taste">
		select
			*
		from
			taste 
		where
			memberId = #{memberId}
	</select>
	
	<!-- 회원 비밀번호 초기화 -->
	<update id="resetMemberPw" parameterType="Member">
		update
			member
		set
			memberPw = #{memberPw} 
		where 
			memberId = #{memberId}
	</update>
	
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="Member">
		update
			member
		set
			phone = #{phone}
		where
			memberId = #{memberId}
	</update>
	
	<!-- 취향 정보 수정 -->
	<update id="updateTaste" parameterType="Taste">
		update
			taste
		set
			hasAllergy = #{hasAllergy}
			, allergyType = #{allergyType}
			, cocktailTaste = #{cocktailTaste}
			, cocktailFlavor = #{cocktailFlavor}
		where 
			memberId = #{memberId}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="unableMember" parameterType="String">
		delete from
			member
		where
			memberId = #{memberId}
	</delete>
	
</mapper>
